/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c MusicAdaptor -a music_adaptor_p.h:music_adaptor.cpp music.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef MUSIC_ADAPTOR_P_H_1304406899
#define MUSIC_ADAPTOR_P_H_1304406899

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
class MusicDbusObject;

/*
 * Adaptor class for interface com.meego.acer.musicplayer
 */
class MusicAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.meego.app.music")
    Q_PROPERTY(QString state READ state WRITE setState NOTIFY stateChanged)
    Q_PROPERTY(QStringList nowNextTracks READ nowNextTracks WRITE setNowNextTracks NOTIFY nowNextTracksChanged)

public:
    MusicAdaptor(QObject *parent);
    virtual ~MusicAdaptor();
    QString state() const;
    void setState(QString &state);
    QStringList nowNextTracks() const;
    void setNowNextTracks(QStringList &nowNextTracks);

public Q_SLOTS: // METHODS
    void close();
    void fastForward();
    int getCurrentTrack();
    int getNumberOfTracks();
    int getPlaybackMode();
    int getPlaybackState();
    int getPosition();
    int getVolume();
    void pause();
    void play();
    void prev();
    void playNextTrack();
    void next();
    void playPreviousTrack();
    void rewind();
    void setMuted(bool muted);
    void setVolume(int level);
    void show();
    void stop();

Q_SIGNALS: // SIGNALS
    void error(int errorCode);
    void playerClosed();
    void playerLaunched();
    void positionChanged(int position);
    void trackChanged(int track);
    void stateChanged();
    void nowNextTracksChanged();

private:
    MusicDbusObject *dbusObject;
};

#endif
