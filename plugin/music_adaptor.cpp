/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c MusicAdaptor -a music_adaptor_p.h:music_adaptor.cpp music.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "music_adaptor_p.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MusicAdaptor
 */

MusicAdaptor::MusicAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MusicAdaptor::~MusicAdaptor()
{
    // destructor
}

QString MusicAdaptor::state() const
{
    QString thestate;
    QMetaObject::invokeMethod(parent(), "state", Q_RETURN_ARG(QString, thestate));
    return thestate;
}

void MusicAdaptor::setState(QString &state)
{
    QMetaObject::invokeMethod(parent(), "setState", Q_ARG(QString, state));
}

QStringList MusicAdaptor::nowNextTracks() const
{
    QStringList tracks;
    QMetaObject::invokeMethod(parent(), "nowNextTracks", Q_RETURN_ARG(QStringList, tracks));
    return tracks;
}

void MusicAdaptor::setNowNextTracks(QStringList &nowNextTracks)
{
    QMetaObject::invokeMethod(parent(), "setNowNextTracks", Q_ARG(QStringList, nowNextTracks));
}

QStringList MusicAdaptor::getCurrentTrackMetadata()
{
    QStringList data;
    QMetaObject::invokeMethod(parent(), "getCurrentTrackMetadata", Q_RETURN_ARG(QStringList, data));
    return data;
}

void MusicAdaptor::close()
{
    // handle method call com.meego.acer.musicplayer.close
    QMetaObject::invokeMethod(parent(), "close");
}

void MusicAdaptor::fastForward()
{
    // handle method call com.meego.acer.musicplayer.fastForward
    QMetaObject::invokeMethod(parent(), "fastForward");
}

int MusicAdaptor::getCurrentTrack()
{
    // handle method call com.meego.acer.musicplayer.getCurrentTrack
    int track;
    QMetaObject::invokeMethod(parent(), "getCurrentTrack", Q_RETURN_ARG(int, track));
    return track;
}

int MusicAdaptor::getNumberOfTracks()
{
    // handle method call com.meego.acer.musicplayer.getNumberOfTracks
    int tracks;
    QMetaObject::invokeMethod(parent(), "getNumberOfTracks", Q_RETURN_ARG(int, tracks));
    return tracks;
}

int MusicAdaptor::getPlaybackMode()
{
    // handle method call com.meego.acer.musicplayer.getPlaybackMode
    int mode;
    QMetaObject::invokeMethod(parent(), "getPlaybackMode", Q_RETURN_ARG(int, mode));
    return mode;
}

int MusicAdaptor::getPlaybackState()
{
    // handle method call com.meego.acer.musicplayer.getPlaybackState
    int state;
    QMetaObject::invokeMethod(parent(), "getPlaybackState", Q_RETURN_ARG(int, state));
    return state;
}

int MusicAdaptor::getPosition()
{
    // handle method call com.meego.acer.musicplayer.getPosition
    int position;
    QMetaObject::invokeMethod(parent(), "getPosition", Q_RETURN_ARG(int, position));
    return position;
}

int MusicAdaptor::getVolume()
{
    // handle method call com.meego.acer.musicplayer.getVolume
    int level;
    QMetaObject::invokeMethod(parent(), "getVolume", Q_RETURN_ARG(int, level));
    return level;
}

void MusicAdaptor::pause()
{
    // handle method call com.meego.acer.musicplayer.pause
    QMetaObject::invokeMethod(parent(), "pause");
}

void MusicAdaptor::play()
{
    // handle method call com.meego.acer.musicplayer.play
    QMetaObject::invokeMethod(parent(), "play");
}

void MusicAdaptor::playNextTrack()
{
    // handle method call com.meego.acer.musicplayer.playNextTrack
    QMetaObject::invokeMethod(parent(), "playNextTrack");
}

void MusicAdaptor::next()
{
    playNextTrack();
}

void MusicAdaptor::playPreviousTrack()
{
    // handle method call com.meego.acer.musicplayer.playPreviousTrack
    QMetaObject::invokeMethod(parent(), "playPreviousTrack");
}

void MusicAdaptor::prev()
{
    playPreviousTrack();
}

void MusicAdaptor::rewind()
{
    // handle method call com.meego.acer.musicplayer.rewind
    QMetaObject::invokeMethod(parent(), "rewind");
}

void MusicAdaptor::setMuted(bool muted)
{
    // handle method call com.meego.acer.musicplayer.setMuted
    QMetaObject::invokeMethod(parent(), "setMuted", Q_ARG(bool, muted));
}

void MusicAdaptor::setVolume(int level)
{
    // handle method call com.meego.acer.musicplayer.setVolume
    QMetaObject::invokeMethod(parent(), "setVolume", Q_ARG(int, level));
}

void MusicAdaptor::show()
{
    // handle method call com.meego.acer.musicplayer.show
    QMetaObject::invokeMethod(parent(), "show");
}

void MusicAdaptor::stop()
{
    // handle method call com.meego.acer.musicplayer.stop
    QMetaObject::invokeMethod(parent(), "stop");
}

